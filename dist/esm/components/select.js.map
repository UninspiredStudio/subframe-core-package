{"version":3,"file":"select.js","sources":["../../../src/components/select.tsx"],"sourcesContent":["\"use client\";\n\nimport * as RadixSelect from \"@radix-ui/react-select\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport styles from \"./select.module.css\";\n\ninterface RootProps extends RadixSelect.SelectProps {}\n\nexport const Root = React.forwardRef<HTMLDivElement, RootProps>(\n  function SelectRoot({ children, ...otherProps }, _ref) {\n    return <RadixSelect.Root {...otherProps}>{children}</RadixSelect.Root>;\n  }\n);\n\nexport const Trigger = React.forwardRef<\n  HTMLButtonElement,\n  RadixSelect.SelectTriggerProps\n>(function Trigger({ className, children, ...otherProps }, ref) {\n  return (\n    <RadixSelect.Trigger\n      className={classNames(className, styles.trigger)}\n      ref={ref}\n      {...otherProps}\n    >\n      {children}\n    </RadixSelect.Trigger>\n  );\n});\n\nexport const Value = React.forwardRef<\n  HTMLButtonElement,\n  RadixSelect.SelectValueProps\n>(function Value(\n  {\n    children, // NOTE: ignored\n    placeholder,\n    className,\n    ...otherProps\n  },\n  ref\n) {\n  return (\n    // NOTE: this needs a wrapper since Radix strips all styling from RadixSelect.Value\n    <span\n      className={classNames(className, styles.value)}\n      {...otherProps}\n      ref={ref}\n    >\n      <RadixSelect.Value placeholder={placeholder} />\n    </span>\n  );\n});\n\ninterface ContentProps extends RadixSelect.SelectContentProps {\n  portalClassName?: string;\n}\n\nexport const Content = React.forwardRef<HTMLDivElement, ContentProps>(\n  function Content(\n    {\n      className,\n      children,\n      portalClassName,\n      position = \"popper\",\n      sideOffset = 4,\n      ...otherProps\n    },\n    ref\n  ) {\n    return (\n      <RadixSelect.Portal className={portalClassName}>\n        <RadixSelect.Content\n          className={classNames(className, styles.content)}\n          ref={ref}\n          position={position}\n          sideOffset={sideOffset}\n          {...otherProps}\n        >\n          <Select.Viewport asChild>{children}</Select.Viewport>\n        </RadixSelect.Content>\n      </RadixSelect.Portal>\n    );\n  }\n);\n\nexport const Viewport = React.forwardRef<\n  HTMLDivElement,\n  RadixSelect.SelectViewportProps\n>(function Viewport({ className, children, ...otherProps }, ref) {\n  return (\n    <RadixSelect.Viewport\n      className={classNames(className, styles.viewport)}\n      ref={ref}\n      {...otherProps}\n    >\n      {children}\n    </RadixSelect.Viewport>\n  );\n});\n\nexport const Item = React.forwardRef<\n  HTMLDivElement,\n  RadixSelect.SelectItemProps\n>(function Item({ className, children, value, ...otherProps }, ref) {\n  return (\n    <RadixSelect.Item\n      className={classNames(className, styles.item)}\n      ref={ref}\n      value={value}\n      {...otherProps}\n    >\n      {children}\n    </RadixSelect.Item>\n  );\n});\n\nexport const ItemText = RadixSelect.ItemText;\n\nexport const Select = {\n  Root,\n  Trigger,\n  Value,\n  Content,\n  Viewport,\n  Item,\n  ItemText,\n};\n"],"names":[],"mappings":";;;;;;;AASO;AAAmB;AAEtB;AAAmD;AAEvD;AAEa;AAIX;AACE;AAAa;AAAZ;AACgD;AAC/C;AACI;AAAA;AAEH;AAGP;AAEO;AAIL;AACE;AAAA;AACA;AACA;AAEF;AAGA;AAAA;AAAA;AAEE;AAAC;AAAA;AAC8C;AACzC;AACJ;AAAA;AAE6C;AAC/C;AAEJ;AAMO;AAAsB;AAEzB;AACE;AACA;AACA;AACW;AACE;AACV;AAIL;AAEI;AAAa;AAAZ;AACgD;AAC/C;AACA;AACA;AACI;AAAA;AAE+B;AAEvC;AAGN;AAEa;AAIX;AACE;AAAa;AAAZ;AACiD;AAChD;AACI;AAAA;AAEH;AAGP;AAEO;AAIL;AACE;AAAa;AAAZ;AAC6C;AAC5C;AACA;AACI;AAAA;AAEH;AAGP;AAEO;AAEA;AAAe;AACpB;AACA;AACA;AACA;AACA;AACA;AAEF;;"}