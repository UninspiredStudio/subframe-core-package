{"version":3,"file":"pie-chart.js","sources":["../../../src/components/pie-chart.tsx"],"sourcesContent":["\"use client\"\n\nimport classNames from \"classnames\"\nimport React from \"react\"\nimport { Cell, Pie, PieChart as RechartsPieChart } from \"recharts\"\nimport { AutoSizedChartWrapper, ChartContextProvider, ChartLegend, ChartTooltip, DEFAULT_COLORS } from \"./charts\"\nimport styles from \"./pie-chart.module.css\"\n\ninterface RootProps extends React.HTMLAttributes<HTMLDivElement> {\n  category: string\n  colors?: string[]\n  dark?: boolean\n  data: Array<Record<string, string | number>>\n  index: string\n\n  tooltip?: React.ReactNode\n  legend?: React.ReactNode\n\n  // LineChart props\n  margin?: { top: number; right: number; bottom: number; left: number }\n}\n\nexport const PieChart = React.forwardRef<HTMLDivElement, RootProps>(function PieChart(\n  {\n    className,\n    category,\n    colors = DEFAULT_COLORS,\n    dark,\n    data,\n    index,\n    tooltip = <ChartTooltip />,\n    legend = <ChartLegend />,\n    children = (\n      <Pie\n        className={classNames(styles.pie, { [styles.dark]: dark })}\n        data={data}\n        cx=\"50%\"\n        cy=\"50%\"\n        startAngle={90}\n        endAngle={-270}\n        innerRadius=\"75%\"\n        isAnimationActive={false}\n        outerRadius=\"100%\"\n        dataKey={category}\n        nameKey={index}\n      >\n        {data.map((_, index) => {\n          return <Cell key={index} fill={colors[index % colors.length]} />\n        })}\n      </Pie>\n    ),\n    margin,\n    ...otherProps\n  },\n  ref,\n) {\n  return (\n    <ChartContextProvider categories={data.map((obj) => obj[index] as string)} colors={colors} dark={dark}>\n      <AutoSizedChartWrapper ref={ref} {...otherProps}>\n        {({ height, width }) => (\n          <RechartsPieChart data={data} height={height} width={width} margin={margin}>\n            {tooltip}\n            {legend}\n            {children}\n          </RechartsPieChart>\n        )}\n      </AutoSizedChartWrapper>\n    </ChartContextProvider>\n  )\n})\n"],"names":[],"mappings":";;;;;;;;;AAsBa;AAyBH;AACF;;AAUF;;;AAKO;AAMb;;"}